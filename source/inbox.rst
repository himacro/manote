#######
Inbox
#######


Atom's per-project settings
   * 暂时用 project manager解决，等待官方功能上线

ltrace和strace
    * ltrace 追踪动态库的调用
    * strace 追踪syscall的调用

逆火效应(Backfire Effect)
    * 当人们遇上与自身信念相抵触的观点或证据时，除非它们足以摧毁原信念，否则会忽略或者反驳它们，而原信念反而更加强化．
    * (可能原因) 新信息威胁到了接受者的自我认知,从而产生负面情绪.而负面情绪阻碍我们的认知和理解能力, 从而影响了对新信息的消化.

加密和密钥
    分为:对称密钥和非对称密钥

    * 对称密钥
        * 加密密钥和解密密钥一般相同. (或者可以互相推导)
        * 常用于加密数据传输.
        * 通信双方需先协商好密钥并且保护好密钥.
        * 加解密速度快

    * 非对称密钥
        * 有两把密钥,且相互无法推导出对方.
        * 一把密钥加密的内容只能通过另一把解密.
        * 使用时通常一把密钥做公钥, 另一把密钥做私钥. 公钥可以公开,私钥必须保护好.
        * 加解密速度慢

    * 非对称加密通信的例子:
        1. 当A给B发送信息时, 首先取得B的公钥. 用B的公钥将信息加密后发送给B. B用自己的私钥解密.
        2. 当B回复时, 需要首先取得A的公钥, 用此公钥加密回复信息, A用自己的公钥解密.

        .. warning::

            获取对方公钥时, 必须通过\ **可信的**\ 方式. 否则别人可能通过伪造对方的公钥的方式骗取信息.

    * 数字签名:
        * 用于验证一个文件\ **不可否认**\ 的\ **出自某人之手**\ , 且\ **未经任何改动**\ . 混合了非对称密钥加密技术和数字摘要技术
        * 过程
            1. 签名者首先生成文件摘要, 然后用自己的私钥对摘要加密, 接着将加密后的摘要作为签名和原文件一起发送给接受者.
            2. 接受者用和签名者同样的方法生成文件摘要, 然后用签名者的公钥对接收到的签名进行解密还原. 如果两者一致, 则验证通过.

    * 利用非对称加密通信协商对称密钥
        * 对称加密的加解密速度快. 因此更适用于大数据量的通信. 但密钥的协商是个麻烦的事情.
        * 可以通过非对称加密方式协商对称加密密钥. 通信一方随机生成一个对称密钥, 然后用对方的公钥将对生成的密钥进行加密, 再发送给对方. 对方利用自己的私钥进行解密对称密钥.

    * PGP
        TBD

SSH
    * ssh-copy-id 可以将生成的公钥推送到主机上
    * ~/.ssh/config

      连接共享配置::

        ControlMaster auto
        ControlPath /tmp/ssh_mux_%h_%p_%r

      长连接(即使所有客户端关闭, 也在一定时间内保持连接)::

        ControlPersist 4h  # 长连接

添加自己的Rexx库
    * 系统会从SYSEXEC, SYSPROC这两个DD里寻找Rexx命令. 要添加自己的Rexx库, 就需要添加到这两个DD上. 通常选择SYSEXEC.
    * 执行下面的TSO命令添加自己的Rexx库:
        * ``TSO ALTLIB DEACTIVATE APPLICATION(EXEC)``
        * ``TSO ALTLIB ACTIVATE APPLICATION(EXEC) DATASET('your.rexx.lib')``
